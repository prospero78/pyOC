"""
Координаты тегов в исходнике можно менять.
"""
from .модКоординаты import тКоорд

class тКоордИсх(тКоорд):
	def __init__(сам, пцСтр, пцПоз):
		def НомСтр_Проверить():
			assert type(пцСтр) == int, "тКоордИсх.__init__(): пцСтр должен быть числом, type(пцСтр)="+str(type(пцСтр))
			assert пцСтр >= 0, "тКоорд.__init__(): пцСтр должен быть 0 или больше, пцСтр="+str(пцСтр)

		def НомПоз_Проверить():
			assert type(пцПоз) == int, "тКоордИсх.__init__(): пцПоз должен быть числом, type(пцПоз)="+str(type(пцПоз))
			assert пцПоз >= 0, "тКоорд.__init__(): пцПоз должен быть 0 или больше, пцПоз="+str(пцПоз)

		НомСтр_Проверить()
		НомПоз_Проверить()
		сам.__цСтр = пцСтр # Строка в исходнике
		сам.__цПоз = пцПоз # позиция в строке исходника

	@property
	def стр(сам):
		return сам.__цСтр

	@property
	def поз(сам):
		return сам.__цПоз

	@стр.setter
	def стр(сам, пцСтр):
		assert type(пцСтр) == int, "тКоордИсх.Стр_Уст(пцСтр): пцСтр должен быть числом"+str(type(пцСтр))
		assert пцСтр >= 0, "тКоорд.Стр_Уст(): пцСтр должен быть 0 или больше, пцСтр="+пцСтр
		сам.__цСтр = пцСтр

	def Стр_Доб(сам):
		сам.__цСтр += 1

	@поз.setter
	def поз(сам, пцПоз):
		assert type(пцПоз) == int, "тКоордИсх.Поз_Уст(пцПоз): пцПоз должен быть числом "+str(type(пцПоз))
		assert пцПоз >= 0, "тКоордИсх.Поз_Уст(пцПоз): пцПоз должен быть 0 или больше, пцПоз="+пцПоз
		сам.__цПоз = пцПоз

	def Поз_Доб(сам):
		"""
		Сдвигает позицию в исходнике дальше
		"""
		сам.__цПоз += 1

	def Поз_Сброс(сам):
		сам.__цПоз = 0
