# coding: utf8
"""
Модуль предоставляет класс для разбора типа.
Простой тип может содержать определения других подтипов и членов.
"""

if True:
	from пакКомпилер.пакСлово import тСлово
	from пакКомпилер.пакМодуль.пакТипы.модРод import тРод
	from . модТипБазовый import тТипБазовый
	from . модТипАлиас import тТипАлиас
	from . модТипМассив import тТипМассив
	from . модТипЗапись import тТипЗапись

class тТип(тТипБазовый):
	def __init__(сам, пКорень, пСловаСекции):
		тТипБазовый.__init__(сам, пКорень, пСловаСекции)

		сам.массив_размерность = {} # заполняется при определении массива
		сам.запись_поля = {} # словарь полей типа RECORD
		сам.__РодТипа_Проверить()

	def __РодТипа_Проверить(сам):
		"""
		Проверяет род встреченного типа. Возможны варианты:
		1. Алиас встроенного типа.

		2.Массив чего-либо

		3. Пустая запись, должна заканчиваться "END;" (просто запись без членов -- бесполезна,
			но для расширения в шине сообщений -- бывает может пригодиться), скорей всего с
			множеством полей.

		4. Запись с полями, множественные уровни вложенности. Рекурсивный анализ.
			Заканчивается на "END;", но после слова "RECORD" идёт не "END"

		5. ....
		"""
		if сам.род == тРод.сВстроен: # текущий тип основан на встроенном типе
			алиас = тТипАлиас(сам)
		elif сам.род == тРод.сМассив: # текущий тип основан на массиве
			массив = тТипМассив(сам)
		elif сам.род == тРод.сЗапись: # текущий тип основан на записе
			запись = тТипЗапись(сам)
		elif сам.род == тРод.сЗаписьСложная: # тип был не пустая запись НЕТ ТАКОГО ТИПА
			# здесь уже должно быть первое имя типа
			# все остальные поля предварительно заполнены
			сам.__Запись_Проверить()
		else:
			assert False, "тТип: неизвестный род записи, род=" + сам.род
		сам.Паспорт_Печать()

	def Паспорт_Печать(сам):
		print("      род     =", сам.род)
		print("      предок  =", сам.предок)
		if сам.род == тРод.сМассив:
			for ключ in range(len(сам.массив_размерность)):
				print("      ключ ", ключ, ":",сам.массив_размерность[ключ])
			print("      элем    =", сам.массив_тип)
		if сам.род == тРод.сЗапись:
			for ключ in range(len(сам.запись_поля)):
				print("      ключ ", ключ, ":   ",сам.массив_размерность["имя"], "   тип=", сам.массив_размерность["тип"])
		print()
