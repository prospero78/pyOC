# coding:utf8
"""
Модуль описывает тип-массив.
"""

if True:
	from пакКомпилер.пакМодуль.пакТипы.модРод import тРод

class тТипМассив:
	def __init__(сам, пТип):
		сам.тип = пТип
		сам.__Массив_Проверить()
		сам.тип.Разделитель_Обрезать()

	def __Массив_Проверить(сам):
		"""
		Пытается проверить, является ли тип массивом.
		"""
		def Размерности_Получить():
			"""
			Рекурсивно получает и заполняет размерности массива.
			"""
			сам.тип.СловаСекции_Обрезать()
			# получаем первую размерность массива
			try:
				размер = int(сам.тип.Слово_Проверить())
			except:
				assert False, "тТип: число массива должно быть числом, тип="+str(type(размер))
			сам.тип.массив_размерность[len(сам.тип.массив_размерность)] = размер
			сам.тип.СловаСекции_Обрезать()
			# есть ли ещё размерности
			запятая = сам.тип.Слово_Проверить()
			if запятая == ",": # есть ещё размерности
				Размерности_Получить()
		строка = сам.тип.Слово_Проверить()
		if строка == "ARRAY":
			сам.__род = тРод.сВстроен
			сам.тип.Предок_Уст("ARRAY")
			Размерности_Получить()
			# сейчас слово должно быть OF
			строка = сам.тип.Слово_Проверить()
			if строка != "OF":
				assert False, "тТип: пропущено OF в определении массива? слово="+строка
			сам.тип.СловаСекции_Обрезать()
			строка_тип = сам.тип.Слово_Проверить()
			сам.тип.массив_тип = строка_тип
			сам.тип.СловаСекции_Обрезать()
			# теперь ковыряем разделитель
			строка_раздел = сам.тип.Слово_Проверить()
			if строка_раздел != ";":
				assert False, "тТип: пропущен разделитель в определении массива? слово="+строка_раздел
			#сам.тип.Разделитель_Обрезать()
