# coding:utf8
"""
Модуль описывает поле ранее описанного типа в составе записи.
"""
if True:
	from пакКомпилер.пакСлово import тСлово

class тПоле:
	def __init__(сам, пТип, пТипЗапись):
		сам.тип = пТип
		сам.запись = пТипЗапись
		сам.__имя = ""
		сам.__тип = ""
		сам.__Имя_Получить()
		сам.__Разделитель_Обрезать()
		сам.__ТипПоля_Проверить()
		сам.__

	def __Имя_Получить(сам):
		"""
		Получает имя поля.
		"""
		слово_поле = сам.тип.слова_секции[0]
		assert слово_поле != тСлово, "тПоле: слово поля должно быть тСлово, тип="+str(type(слово_род))
		if слово_поле.ЕслиИмя():
			сам.__имя = сам.тип.Слово_Проверить
			сам.__СловаСекции_Обрезать()
		else:
			assert False, "Имя поля внутри типа должно быть именем, " + слово_поле.строка

	def __Разделитель_Обрезать(сам):
		сам.тип.Разделитель_Обрезать()

	def __ТипПоля_Проверить(сам):
			"""
			Пытается вычислить поле в простой записи.
			"""
			слово_тип = сам.тип.слова_секции[0]
			assert слово_тип != тСлово, "тТипЗапись: слово поля должно быть тСлово, тип="+str(type(слово_тип))
			if слово_тип.ЕслиИмя():
				сам.__тип = сам.тип.Слово_Проверить()
				сам.СловаСекции_Обрезать()
			else:
				assert False, "тПоле: Тип поля внутри типа должно быть именем, " + слово_тип.строка


	@property
	def имя(сам):
		return сам.__имя

	@property
	def тип(сам):
		return сам.__тип
