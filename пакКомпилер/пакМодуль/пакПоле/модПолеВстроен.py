# coding:utf8
"""
Описывает поле с встроенным типом.
"""

class тПолеВстроен:
	def __init__(сам, пДанные):
		assert type(пДанные) == dict, "тПолеВстроен: пДанные должен быть dict, type=" + str(type(пДанные))
		сам.секция = пДанные['секция']
		сам.слова_секции = пДанные['слова']
		сам.предок = ""
		сам.__Тип_Проверить()

	def __Тип_Проверить(сам):
		слово_тип = сам.слова_секции[0]
		строка_тип = слово_тип.Проверить()
		assert слово_тип.ЕслиСтр_Допустимо(), "тПолеВстроен: тип поля должен быть разрешённым именем" + слово_тип.стрИсх
		assert строка_тип != "END", "тПолеВстроен: тип поля не можеть быть 'END', тип=" + строка_тип
		if строка_тип == "BOOLEAN":
			сам.предок = "BOOLEAN"
		elif строка_тип == "CHAR":
			сам.предок = "CHAR"
		elif строка_тип == "INTEGER":
			сам.предок = "INTEGER"
		elif строка_тип == "REAL":
			сам.предок = "REAL"
		elif строка_тип == "BYTE":
			ссам.предок = "BYTE"
		elif строка_тип == "SET":
			сам.предок = "SET"
		else:
			assert False, "тПолеВстроен: Неверный встроенный тип" + слово_тип.стрИсх
		сам.поле.база.СловаСекции_Обрезать()
