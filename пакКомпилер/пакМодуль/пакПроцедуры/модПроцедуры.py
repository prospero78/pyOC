# coding:utf8
"""
Модуль разбора процедур.
"""
if True:
	from . модПроцедура import тПроцедура
	from пакКомпилер.пакМодуль.пакСекция import тСекция

class тПроцедуры(тСекция):
	def __init__(сам, пДанные):
		тСекция.__init__(сам, пДанные)
		сам.__проц = {} # словарь по каждой глобальной процедуре в модуле
		сам.__Обработать()

	def __КонецПроц_Получить(сам):
		"""
		Особенность в том, что нужно контролировать начало процедуры и её конец.
		Доказательство начала: PROCEDURE <имя>(
		Доказательство окончания END <имя>;
		Нужно искать  END <имя>;  с конца
		"""
		цКонец = len(сам.слова_модуль) - 1
		слово0 = None
		слово1 = None
		слово2 = None
		while цКонец >= 0:
			слово0 = сам.слова_модуль[цКонец]
			if слово0.строка ==";":
				слово1 = сам.слова_модуль[цКонец-1]
				if слово1.ЕслиИмя_Строго():
					слово2 = сам.слова_модуль[цКонец-2]
					if слово2.строка == "END": # это точно конец процедуры
						break
			цКонец -= 1
		сам.слово_конец = сам.слова_модуль[цКонец]

	def __Процедуры_Разделить(сам):
		"""
		Пока не исчерпаны слова секции -- последовательно вызываем новый тип.
		"""
		while len(сам.слова_секции) > 0:
			проц = None
			парам={}
			парам["секция"] = "PROCEDURE"
			парам["слова"] = сам.слова_секции
			парам['имя'] = ""				# Тут пока ничего не известно
			парам['бЭкспорт'] = False	# Оставляем возможность корректировать внутри
			проц = тПроцедура(парам)
			сам.слова_секции = проц.слова_секции
			#проц.Паспорт_Печать()
			сам.__проц[len(сам.__проц)] = проц
			print(проц.имя)

	def __Обработать(сам):
		"""
		Проводит разбор секции VAR.
		"""
		сам.__КонецПроц_Получить()
		сам.СловаСекции_Получить()
		#сам.Перем_Печать()
		сам.__Процедуры_Разделить()
		сам.СловаСекции_Печать()
