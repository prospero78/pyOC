# coding: utf8
"""
Содержит код для показа ошибки с текстом и позиции в тесте + выход.
"""
if True:
	import sys

	from пакОберон.пакКомпилятор.пакСущность.пакКоорд import тКоордФикс

class тОшибка:
	def __init__(сам, пОберон)->None:
		сам.__конс = пОберон.конс

	def Печать(сам, пСообщ:str)->None:
		'''
		Выводит текст ошибки, если такая встретится в исходном тексте.
		'''
		def Сообщ_Проверить()->None:
			бУсл :bool= isinstance(пСообщ, str)
			стрОш :str= "тОшибка: Параметр 'пСообщ' должен быть строкой, isinstance="+str(type(пСообщ))
			сам.__конс.Проверить(бУсл, стрОш)

		Сообщ_Проверить()
		сам.__конс.Ошибка(пСообщ)

	def Коорд(сам, пСообщ:str, пКоорд, пСтрокаИсх:str)->None:
		'''
		Выводит текст ошибки, если такая встретится в тексте.
		'''
		def Коорд_Проверить()->None:
			бУсл :bool = isinstance(пКоорд, тКоордФикс)
			стрОш :str = "тОшибка: Параметр пКоорд должен наследовать тКоордФикс, isinstance="+str(пКоорд)
			сам.__конс.Проверить(бУсл, стрОш)

			бУсл = пКоорд != None
			стрОш = "тОшибка: Параметр 'пКоорд' не может быть пустым значением"
			сам.__конс.Проверить(бУсл, стрОш)

		def Сообщ_Проверить()->None:
			бУсл :bool= isinstance(пСообщ , str)
			стрОш :str= "тОшибка: Параметр 'пСообщ' должен быть строкой, isinstance="+str(пСообщ)
			сам.__конс.Проверить(бУсл, стрОш)

		def СтрИсх_Проверить()->None:
			бУсл :bool= isinstance(пСтрокаИсх , str)
			стрОш :str= "тОшибка: Параметр 'пСтрокаИсх' должен быть строкой, isinstance="+str(пСтрокаИсх)
			сам.__конс.Проверить(бУсл, стрОш)

		Коорд_Проверить()
		Сообщ_Проверить()
		СтрИсх_Проверить()

		сам.__конс.Печать("-" * (пКоорд.цПоз + len(str(пКоорд.цСтр))+2) + "^" + \
				" (стр=" + str(пКоорд.цСтр) + " поз=" + str(пКоорд.цПоз) + ")")
		сам.__конс.Ошибка(пСообщ)
		сам.__конс.Исх_Печать(str(пКоорд.цСтр) + " " + пСтрокаИсх)
