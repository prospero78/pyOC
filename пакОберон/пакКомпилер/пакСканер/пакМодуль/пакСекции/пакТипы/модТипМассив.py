# coding:utf8
"""
Модуль описывает тип-массив.
"""

if True:
	from .модРод import тРод
	from . модТипБазовый import тТипБазовый

class тТипМассив(тТипБазовый):
	def __init__(сам, пДанные):
		тТипБазовый.__init(пДанные)
		сам.род = "ARRAY"
		сам.элем = тРод.сБезТипа # элементы массива
		сам.__Массив_Проверить()
		сам.__Из_Обрезать()
		сам.Предок_Проверить()
		сам.Разделитель_Обрезать()

	def __Массив_Проверить(сам):
		"""
		Пытается проверить, является ли тип массивом.
		"""
		def Размерности_Получить():
			"""
			Рекурсивно получает и заполняет размерности массива.
			"""
			# получаем первую размерность массива
			слово_размер = сам.тип.слова_секции[0]
			размер = int(слово_размер.Проверить())
			сам.тип.массив_размерность[len(сам.тип.массив_размерность)] = размер
			сам.тип.СловаСекции_Обрезать()
			# есть ли ещё размерности
			слово_запятая = сам.тип.слова_секции[0]
			запятая = слово_запятая.Проверить()
			if запятая == ",": # есть ещё размерности
				сам.тип.СловаСекции_Обрезать()
				Размерности_Получить()

			Размерности_Получить()

	def __Из_Обрезать(сам):
		"""
		Образает OF (ARRRAY ... OF ... ;)
		"""
		слово_из = сам.слова_секции[0]
		строка = слово_из.Проверить()
		assert строка == "OF", "тТип: пропущено OF в определении массива?" + слово_из.стрИсх
		сам.СловаСекции_Обрезать()
