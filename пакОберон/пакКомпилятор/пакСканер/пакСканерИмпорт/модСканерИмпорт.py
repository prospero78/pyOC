# coding: utf8
"""
Модуль "Импорт" содержит процедуры анализа возможного импорта модулей.
"""
if True:
	from пакОберон.пакКомпилятор.пакСущность.пакСлово import тСлово
	from пакОберон.пакКомпилятор.пакСущность.пакСекция import тСекцияИмпорт

class тСканерИмпорт(тСекцияИмпорт):
	def __init__(сам, пОберон, пДанные:dict)->None:
		сам.__оберон = пОберон
		сам.__конс = пОберон.конс
		тСекцияИмпорт.__init__(сам, пОберон, пДанные)
		сам.__Обработать()

	def __ЕслиИмпорт(сам) -> bool:
		"""
		Первое слово в списке слов должно быть IMPORT.
		Если нет -- значит в исходнике нет импорта.
		IMPORT не может быть пустым.
		"""
		слово :тСлово = сам.слова_модуля[0]
		if слово.строка == 'IMPORT':
			сам.бСекцияЕсть = True
			# укоротить слова
			слова_модуля = {}
			for счёт in range(1, len(сам.слова_модуля)):
				слово = сам.слова_модуля[счёт]
				слова_модуля[счёт-1] = слово
			сам.слова_модуля = {}
			сам.слова_модуля = слова_модуля
		return сам.бСекцияЕсть

	def __ЕслиИмпортОдин(сам)->None:
		"""
		Проверяет, что ключевое слово IMPORT в модуле встречается один раз
		"""
		цСчётИмпорт :int = 0
		цСловоНом :int = 0
		цСловаВсего :int = len(сам.слова_модуля)
		while цСловоНом < цСловаВсего:
			слово :тСлово = сам.слова_модуля[цСловоНом]
			цСловоНом += 1
			if слово.строка == 'IMPORT':
				цСчётИмпорт += 1
			if цСчётИмпорт > 1:
				стрСообщ = "тИмпорт: IMPORT два раза в одном модуле запрещён"+ слово.стрИсх
				сам.__конс.Ошибка(стрСообщ)

	def __ЕслиИмпортОграничен(сам)->None:
		"""
		Ищет разделитель окончания импорта.
		Должно заканчиваться на ";"
		"""
		цСловоНом :int = 0 # первое слово_врем после ИМПОРТ, а сам ИМПОРТ уже распознан
		слово_врем :тСлово = сам.слова_модуля[цСловоНом]
		бДальше :bool = (слово_врем.строка != ";")

		if type(слово_врем) != тСлово:
			стрСообщ = "тИмпорт: Слово должно быть тСлово, type="+str(type(слово_врем))
			сам.__конс.Ошибка(стрСообщ)

		while бДальше and (цСловоНом < сам.цСловаМодуля):
			цСловоНом += 1
			слово_врем = сам.слова_модуля[цСловоНом]
			if type(слово_врем) != тСлово:
				стрСообщ = "тИмпорт: Слово должно быть тСлово, type="+str(type(слово_врем))
				сам.__конс.Ошибка(стрСообщ)
			бДальше = (слово_врем.строка != ";")

		if бДальше:
			стрСообщ = "тИмпорт: секция нигде не заканчивается " + слово_врем.стрИсх
			сам.__конс.Ошибка(стрСообщ)
		сам.Конец_Уст(слово_врем)

	def __Обработать(сам)->None:
		"""
		Обеспечивает обработку импорта модуля.
		"""
		if сам.__ЕслиИмпорт():
			сам.__ЕслиИмпортОдин()
			сам.__ЕслиИмпортОграничен()
			сам.СловаСекции_Получить()
			#сам.Импорт_Разобрать()

	def Парам_Получ(сам) -> dict:
		парам :dict = {}
		парам['слова'] = сам.слова_модуля
		парам['слова_секции'] = сам.слова_секции
		return парам
