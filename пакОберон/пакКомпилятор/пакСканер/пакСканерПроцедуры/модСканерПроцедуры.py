# coding:utf8
"""
Модуль разбора процедур.
"""
if True:
	#from . модПроцедура import тПроцедура
	from пакОберон.пакКомпилятор.пакСущность.пакСекция import тСекцияПроц

class тСканерПроцедуры(тСекцияПроц):
	def __init__(сам, пДанные):
		тСекцияПроц.__init__(сам, пДанные)
		сам.__проц = {} # словарь по каждой глобальной процедуре в модуле
		сам.__Обработать()

	def __КонецПроц_Получить(сам):
		"""
		Особенность в том, что нужно контролировать начало процедуры и её конец.
		Доказательство начала: PROCEDURE <имя>(
		Доказательство окончания END <имя>;
		Нужно искать  END <имя>;  с конца
		"""
		цКонец = сам.цСловаМодуля - 1
		слово0 = None
		слово1 = None
		слово2 = None
		while цКонец >= 0:
			слово0 = сам.слова_модуля[цКонец]
			if слово0.строка ==";":
				слово1 = сам.слова_модуля[цКонец-1]
				if слово1.ЕслиИмя_Строго():
					слово2 = сам.слова_модуля[цКонец-2]
					if слово2.строка == "END": # это точно конец процедуры
						break
			цКонец -= 1
		сам.Конец_Уст(сам.слова_модуля[цКонец])

	def __Обработать(сам):
		"""
		Проводит разбор секции VAR.
		"""
		сам.__КонецПроц_Получить()
		сам.СловаСекции_Получить()
		#сам.Перем_Печать()
		#сам.__Процедуры_Разделить()
