"""
Координаты слов можно менять.
"""
from .модКоордФикс import тКоордФикс

class тКоордИзм(тКоордФикс):
	def __init__(сам, пОберон, пцСтр:int, пцПоз:int)->None:
		def НомСтр_Проверить():
			бУсл = type(пцСтр) == int
			стрСообщ = "тКоордИсх.__init__(): пцСтр должен быть числом, type(пцСтр)="+str(type(пцСтр))
			сам.__конс.Проверить(бУсл, стрСообщ)

			бУсл = пцСтр >= 1
			стрСообщ = "тКоорд.__init__(): пцСтр должен быть 1 или больше, пцСтр="+str(пцСтр)
			сам.__конс.Проверить(бУсл, стрСообщ)

		def НомПоз_Проверить():
			бУсл = type(пцПоз) == int
			стрСообщ = "тКоордИсх.__init__(): пцПоз должен быть числом, type(пцПоз)="+str(type(пцПоз))
			сам.__конс.Проверить(бУсл, стрСообщ)

			бУсл = пцПоз >= 0
			стрСообщ = "тКоорд.__init__(): пцПоз должен быть 0 или больше, пцПоз="+str(пцПоз)
			сам.__конс.Проверить(бУсл, стрСообщ)

		сам.__оберон = пОберон
		сам.__конс = пОберон.конс
		НомСтр_Проверить()
		НомПоз_Проверить()
		сам.__цСтр :int = пцСтр # Строка в исходнике
		сам.__цПоз :int = пцПоз # позиция в строке исходника

	@property
	def цСтр(сам)->int:
		return сам.__цСтр

	@цСтр.setter
	def цСтр(сам, пцСтр:int):
		assert type(пцСтр) == int, "тКоордИсх.Стр_Уст(пцСтр): пцСтр должен быть числом"+str(type(пцСтр))
		assert пцСтр >= 0, "тКоорд.Стр_Уст(): пцСтр должен быть 0 или больше, пцСтр="+str(пцСтр)
		сам.__цСтр = пцСтр

	def Стр_Доб(сам):
		сам.__цСтр += 1

	@property
	def цПоз(сам)->int:
		return сам.__цПоз

	@цПоз.setter
	def цПоз(сам, пцПоз:int):
		assert type(пцПоз) == int, "тКоордИсх.Поз_Уст(пцПоз): пцПоз должен быть числом "+str(type(пцПоз))
		assert пцПоз >= 0, "тКоордИсх.Поз_Уст(пцПоз): пцПоз должен быть 0 или больше, пцПоз="+str(пцПоз)
		сам.__цПоз = пцПоз

	def Поз_Доб(сам):
		"""
		Сдвигает позицию в исходнике дальше
		"""
		сам.__цПоз += 1

	def Поз_Сброс(сам):
		сам.__цПоз = 0
