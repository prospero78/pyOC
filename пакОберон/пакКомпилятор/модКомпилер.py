# coding: utf8
"""
Модуль "Компилер".
Содержит в себе все составляющие для компилятора Оберона
"""
if True:
	from .пакСканер import тСканер
	from .пакАнализ import тАнализ
	from .пакРазбор import тРазбор
	from .пакСущность.пакОшибка import тОшибка

class тКомпилер:
	__slots__ = ("__оберон","__конс", "ош", "сканер", "__стрИмяФайлаИсх")
	def __init__(сам, пОберон, пФайлИсхИмя)->None:

		сам.__оберон = пОберон
		сам.__конс = пОберон.конс
		сам.__конс.Отладить("тКомпилер.__init__()")

		сам.ош = тОшибка(пОберон, "тКомпилер")

		сам.__стрИмяФайлаИсх = пФайлИсхИмя

		if type(пФайлИсхИмя) != str:
			сам.ош.Внутр("__init__()", "пФайлИсхИмя должен иметь тип str, type="+str(type(пФайлИсхИмя)))
			return
		if пФайлИсхИмя == "":
			сам.ош.Внутр("__init__()", "пФайлИсхИмя не может быть пустой строкой")
			return

		сам.сканер = тСканер(пОберон, пФайлИсхИмя)

	def Обработать(сам):
		сам.__конс.Отладить("Обработать(): компилирую \"" + сам.__стрИмяФайлаИсх + "\"")

		сам.сканер.Обработать()
		if сам.сканер.ош.бВнутр:
			сам.ош.Внутр("Обработать()", "При работе тСканер")
			return
		if сам.сканер.ош.бИсх:
			сам.ош.Исх("Обработать()", "При работе тСканер")
			return

		анализ = тАнализ(сам.__оберон, сканер.Секции_Получить())
		if анализ.ош.бВнутр:
			сам.ош.Внутр("Обработать()", "При создании тАнализ")
			return
		if анализ.ош.бИсх:
			сам.ош.Исх("Обработать()", "При создании тАнализ")
			return

		разбор = тРазбор(анализ.данные)
		if разбор.ош.бВнутр:
			сам.ош.Внутр("Обработать()", "При создании тРазбор")
			return
		if разбор.ош.бИсх:
			сам.ош.Исх("Обработать()", "При создании тРазбор")
			return

	def Шаг(сам):
		"""
		Выполняет компиляцию по шагам.
		"""
		сам.__конс.Печать("Шаг")
