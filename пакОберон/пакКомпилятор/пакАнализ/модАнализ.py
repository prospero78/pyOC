# coding: utf8
"""
Модуль базового типа для анализа секции для всех секций
"""

if True:
	from пакОберон.пакКомпилятор.пакСущность.пакСлово import тСлово
	from .модАнализИмпорт import тАнализИмпорт
	from .модАнализКонст import тАнализКонст
	from .модАнализТипы import тАнализТипы
	from .модАнализПерем import тАнализПерем

class тАнализ:
	def __init__(сам, пДанные):
		def Анализ_Проверить():
			бУсл = пДанные['анализ'] == "анализ"
			стрОш = "В секцию  должен передаваться словарь слов для анализа"
			assert бУсл, стрОш

		if True: # слова секций
			Анализ_Проверить()
			сам.__анализ = пДанные['анализ']
			сам.слова_импорта = пДанные['импорт'] # все слова секции импорт
			сам.слова_конст = пДанные['константы'] # все слова секции констант
			сам.слова_типы = пДанные['типы'] # все слова секции типов
			сам.слова_перем = пДанные['переменные'] # все слова секции переменных
			сам.слова_проц = пДанные['процедуры'] # все слова секции процедур
			сам.слова_модуля = пДанные['модуль'] # все слова инициализации модуля
			#сам.бСекцияЕсть = False # Признак наличия секции
			#сам.__слово_конец = None # последнее слово в секции

		if True: # анализ импорта
			парам = {}
			парам['анализ'] = "анализ"
			парам['слова']  = сам.слова_импорта
			импорт = тАнализИмпорт(парам)
			сам.модули = импорт.модули
			#импорт.МодулиСекции_Печать()

		if True: # анализ констант
			парам = {}
			парам['анализ'] = "анализ"
			парам['слова']  = сам.слова_конст
			парам['модуль_имя'] = пДанные['модуль_имя']
			конст = тАнализКонст(парам)
			сам.константы = конст.константы
			#конст.КонстСекции_Печать()

		if True: # анализ типов
			парам = {}
			парам['анализ'] = "анализ"
			парам['слова']  = сам.слова_типы
			типы = тАнализТипы(парам)
			#типы.ПроцСекции_Печать()

		if True: # анализ переменных
			парам = {}
			парам['анализ'] = "анализ"
			парам['слова']  = сам.слова_перем
			перем = тАнализПерем(парам)
			#прем.ПроцСекции_Печать()

	@property
	def данные(сам):
		данные = {}
		данные['конст'] = сам.константы
		return данные
