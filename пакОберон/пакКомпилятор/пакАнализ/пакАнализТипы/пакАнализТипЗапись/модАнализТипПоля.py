# coding: utf8
"""
Модуль для типа поле.
Вычисляет все возможные типы полей.
"""

if True:
	from пакОберон.пакКомпилятор.пакСущность.пакСлово import тСлово
	from пакОберон.пакКомпилятор.пакСущность.пакРод import тРод
	from .модАнализТипПолеБазовый import тАнализТипПолеБазовый
	from .модАнализТипПолеВстроен   import тАнализТипПолеВстроен
	from .модАнализТипПолеПерем   import тАнализТипПолеПерем
	from .модАнализТипПолеМассив  import тАнализТипПолеМассив
	from .модАнализТипПолеЗапись  import тАнализТипПолеЗапись

class тАнализТипПоля(тАнализТипПолеБазовый):
	def __init__(сам, пДанные):
		тАнализТипПолеБазовый.__init__(сам, пДанные)

		сам.__имя = "" # имя записи
		сам.__бЭкспорт = False # экспорт в полях низкого уровня не вычисляется
		сам.__бЭкспорт_бПрисвоено = False # Защёлка присвоения экспорта
		сам.__бЭкспорт = False # бЭкспорт будет выясняться самими силами поля
		сам.__бСсылка_бПрисвоено = False # Защёлка присвоения ссылки
		сам.__бСсылка = False
		сам.__предок = тРод.сБезПредка
		сам.__поле = None # Ссылка на реальное поле

		сам.__индекс = 0 # смещение в списке слов
		сам.__ИмяПоле_Проверить() # Без оюрезки
		сам.__бЭкспорт_Проверить()
		сам.__Двоеточие_Проверить()
		сам.__Поле_Проверить()

	def __ИмяПоле_Проверить(сам):
		"""
		Проверяет имя поля в записи, должно быть простым.
		Поскольку имён полей с оним типом может быть несколько -- каждое
		поле в группе добавляется под своим номером.
		"""
		слово_имя = сам.слова_секции[сам.__индекс]
		имя = слово_имя.Проверить()
		if слово_имя.ЕслиИмя_Строго():
			сам.__имя = имя
			сам.__индекс += 1
		else:
			assert False, "тАнализТипПолеБазовый: 7790 имя поля недопустимо="+имя+слово_имя.стрИсх

	def __бЭкспорт_Проверить(сам):
		"""
		Проверяет является ли поле экспортируемым.
		"""
		слово_экспорт = сам.слова_секции[сам.__индекс]
		строка_экспорт = слово_экспорт.Проверить()
		if строка_экспорт == "*": # есть экспорт
			сам.__бЭкспорт = True
			сам.__индекс += 1
		elif строка_экспорт == "," or строка_экспорт == ":":
			pass # это определение списка полей
		else:
			assert False, "тАнализТипПоля: Символ экспорта допустим '*' или '='" + слово_экспорт.стрИсх

	def __Поле_Проверить(сам):
		"""
		Проверяет тип поля
		"""
		слово_поле = сам.слова_секции[сам.__индекс]
		строка_поле = слово_поле.Проверить()
		парам = {}
		парам['слова'] = сам.слова_секции
		парам['секция']="TYPE_FIELD"
		if строка_поле in тРод.тип_встроен:
			поле = тАнализТипПолеВстроен(парам)
		elif слово_поле.ЕслиИмя_Строго():
			поле = тАнализТипПолеПерем(парам)
		elif строка_поле == "ARRAY":
			поле = тАнализТипПолеМассив(парам)
		elif строка_поле == "RECORD":
			поле = тАнализТипПолеЗапись(парам)
		else:
			assert False, "тАнализТипПоля: неизвестный род поля при разборе типа"+слово_поле.стрИсх
		сам.__поле = поле
		сам.слова_секции = {}
		сам.слова_секции = поле.слова_секции

	def __Двоеточие_Проверить(сам):
		"""
		Здесь может быть только ":"
		"""
		слово_двоеточ = сам.слова_секции[сам.__индекс]
		строка_двоеточ = слово_двоеточ.Проверить()
		if строка_двоеточ == ":": # есть двоеточие
			#сам.СловаСекции_Обрезать()
			сам.__индекс += 1
		else: # а это уже непонятно что
			assert False, "тАнализЗаписьПоле: разделитель должен быть ':'" + слово_двоеточ.стрИсх
