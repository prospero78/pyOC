# coding: utf8
"""
Модуль для анализа секции типов -- тип-переменная
"""

if True:
	from пакОберон.пакКомпилятор.пакСущность.пакСлово import тСлово
	from пакОберон.пакКомпилятор.пакСущность.пакРод import тРод

	from .модАнализТипБазовый import тАнализТипБазовый
	from пакОберон.пакКомпилятор.пакСущность.пакОшибка import тОшибка

class тАнализТипПерем(тАнализТипБазовый):
	def __init__(сам, пОберон, пДанные):
		сам.__конс = пОберон.конс

		сам.ош = тОшибка(пОберон, "тАнализТипПерем")

		тАнализТипБазовый.__init__(сам, пОберон, пДанные)
		if сам.ошб.бВнутр:
			сам.ош.Внутр("__init__()", "При создании предка тАнализТипБазовый")
			return
		if сам.ошб.бИсх:
			сам.ош.Исх("__init__()", "При создании предка тАнализТипБазовый")
			return
		сам.Имя_Проверить()
		if сам.ошб.бИсх:
			сам.__бОшИсх = True
			стрОш = "При работе тАнализТипБазовый"
			сам.ош.Исх("__init__()", стрОш)
			return
		сам.бЭкспорт_Проверить()
		if сам.ошб.бИсх:
			сам.ош.Исх("__init__()", "При работе бЭкспорт_Проверить()")
			return
		сам.Определитель_Проверить()
		if сам.ошб.бИсх:
			стрОш = "При работе Определитель_Проверить()"
			сам.ош.Исх("__init__()", стрОш)
			return
		сам.бУказатель_Проверить()
		if сам.ошб.бИсх:
			сам.ош.Исх("__init__()", "При работе бУказатель_Проверить()")
			return
		сам.Предок_Проверить()
		if сам.ошб.бИсх:
			сам.ош.Исх("__init__()", "При работе Предок_Проверить()")
			return
		# Здесь нет END, сразу за типом ";"
		сам.Разделитель_Обрезать()
